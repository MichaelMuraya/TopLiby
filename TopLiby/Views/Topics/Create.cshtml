@model TopLiby.Models.Topic
@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

@using (Html.BeginForm())
{
    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(x => x.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(x => x.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.EstimatedTimeToMaster, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(x => x.EstimatedTimeToMaster, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.EstimatedTimeToMaster, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.TimeSpent, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(x => x.TimeSpent, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.TimeSpent, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.SourceOf, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(x => x.SourceOf, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.SourceOf, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.StartLearningDate, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(x => x.StartLearningDate, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.StartLearningDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.InProgress, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(x => x.InProgress, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.InProgress, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.CompletionDate, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(x => x.CompletionDate, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.CompletionDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>  